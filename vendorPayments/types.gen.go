// Package vendorPayments provides primitives to interact the openapi HTTP API.
//
// Code generated by go-sdk-codegen DO NOT EDIT.
package vendorPayments

import (
	"time"
)

// AdditionalDetails defines model for AdditionalDetails.
type AdditionalDetails struct {

	// The detail of the additional information provided by the selling party.
	Detail string `json:"detail"`

	// The language code of the additional information detail.
	LanguageCode *string `json:"languageCode,omitempty"`

	// The type of the additional information provided by the selling party.
	Type string `json:"type"`
}

// Address defines model for Address.
type Address struct {

	// First line of street address.
	AddressLine1 string `json:"addressLine1"`

	// Additional address information, if required.
	AddressLine2 *string `json:"addressLine2,omitempty"`

	// Additional address information, if required.
	AddressLine3 *string `json:"addressLine3,omitempty"`

	// The city where the person, business or institution is located.
	City *string `json:"city,omitempty"`

	// The two digit country code. In ISO 3166-1 alpha-2 format.
	CountryCode string `json:"countryCode"`

	// The county where person, business or institution is located.
	County *string `json:"county,omitempty"`

	// The district where person, business or institution is located.
	District *string `json:"district,omitempty"`

	// The name of the person, business or institution at that address.
	Name string `json:"name"`

	// The phone number of the person, business or institution located at that address.
	Phone *string `json:"phone,omitempty"`

	// The postal or zip code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
	PostalOrZipCode *string `json:"postalOrZipCode,omitempty"`

	// The state or region where person, business or institution is located.
	StateOrRegion *string `json:"stateOrRegion,omitempty"`
}

// AllowanceDetails defines model for AllowanceDetails.
type AllowanceDetails struct {

	// An amount of money, including units in the form of currency.
	AllowanceAmount Money `json:"allowanceAmount"`

	// Description of the allowance.
	Description *string `json:"description,omitempty"`

	// Tax amount details applied on this allowance.
	TaxDetails *[]TaxDetails `json:"taxDetails,omitempty"`

	// Type of the allowance applied.
	Type string `json:"type"`
}

// ChargeDetails defines model for ChargeDetails.
type ChargeDetails struct {

	// An amount of money, including units in the form of currency.
	ChargeAmount Money `json:"chargeAmount"`

	// Description of the charge.
	Description *string `json:"description,omitempty"`

	// Tax amount details applied on this charge.
	TaxDetails *[]TaxDetails `json:"taxDetails,omitempty"`

	// Type of the charge applied.
	Type string `json:"type"`
}

// CreditNoteDetails defines model for CreditNoteDetails.
type CreditNoteDetails struct {

	// Identifies the consignor reference number (VRET number), if generated by Amazon.
	ConsignorsReferenceNumber *string `json:"consignorsReferenceNumber,omitempty"`

	// Identifies the COOP reference used for COOP agreement. Failure to provide the COOP reference number or the Debit Note number may lead to a rejection of the Credit Note.
	CoopReferenceNumber *string `json:"coopReferenceNumber,omitempty"`

	// Debit Note Number as generated by Amazon. Recommended for Returns and COOP Credit Notes.
	DebitNoteNumber *string `json:"debitNoteNumber,omitempty"`

	// Defines a date and time according to ISO8601.
	GoodsReturnDate *DateTime `json:"goodsReturnDate,omitempty"`

	// Original Invoice Number when sending a credit note relating to an existing invoice. One Invoice only to be processed per Credit Note. This is mandatory for AP Credit Notes.
	ReferenceInvoiceNumber *string `json:"referenceInvoiceNumber,omitempty"`

	// Identifies the Returns Notice Number. Mandatory for all Returns Credit Notes.
	ReturnsReferenceNumber *string `json:"returnsReferenceNumber,omitempty"`

	// Identifies the Returned Merchandise Authorization ID, if generated.
	RmaId *string `json:"rmaId,omitempty"`
}

// Date defines model for Date.
type Date string

// DateTime defines model for DateTime.
type DateTime time.Time

// Decimal defines model for Decimal.
type Decimal string

// Error defines model for Error.
type Error struct {

	// An error code that identifies the type of error that occurred.
	Code string `json:"code"`

	// Additional details that can help the caller understand or fix the issue.
	Details *string `json:"details,omitempty"`

	// A message that describes the error condition.
	Message string `json:"message"`
}

// ErrorList defines model for ErrorList.
type ErrorList []Error

// Invoice defines model for Invoice.
type Invoice struct {

	// Additional details provided by the selling party, for tax related or other purposes.
	AdditionalDetails *[]AdditionalDetails `json:"additionalDetails,omitempty"`

	// Total allowance amount details for all line items.
	AllowanceDetails *[]AllowanceDetails  `json:"allowanceDetails,omitempty"`
	BillToParty      *PartyIdentification `json:"billToParty,omitempty"`

	// Total charge amount details for all line items.
	ChargeDetails *[]ChargeDetails `json:"chargeDetails,omitempty"`

	// Defines a date and time according to ISO8601.
	Date DateTime `json:"date"`

	// Unique number relating to the charges defined in this document. This will be invoice number if the document type is Invoice or CreditNote number if the document type is Credit Note. Failure to provide this reference will result in a rejection.
	Id string `json:"id"`

	// An amount of money, including units in the form of currency.
	InvoiceTotal Money `json:"invoiceTotal"`

	// Identifies the type of invoice.
	InvoiceType string `json:"invoiceType"`

	// The list of invoice items.
	Items *[]InvoiceItem `json:"items,omitempty"`

	// Terms of the payment for the invoice. The basis of the payment terms is the invoice date.
	PaymentTerms *PaymentTerms `json:"paymentTerms,omitempty"`

	// An additional unique reference number used for regulatory or other purposes.
	ReferenceNumber *string              `json:"referenceNumber,omitempty"`
	RemitToParty    PartyIdentification  `json:"remitToParty"`
	ShipFromParty   *PartyIdentification `json:"shipFromParty,omitempty"`
	ShipToParty     *PartyIdentification `json:"shipToParty,omitempty"`

	// Total tax amount details for all line items.
	TaxDetails *[]TaxDetails `json:"taxDetails,omitempty"`
}

// InvoiceItem defines model for InvoiceItem.
type InvoiceItem struct {

	// Individual allowance details per line item.
	AllowanceDetails *[]AllowanceDetails `json:"allowanceDetails,omitempty"`

	// Amazon Standard Identification Number (ASIN) of an item.
	AmazonProductIdentifier *string `json:"amazonProductIdentifier,omitempty"`

	// Individual charge details per line item.
	ChargeDetails *[]ChargeDetails `json:"chargeDetails,omitempty"`

	// References required in order to process a credit note. This information is required only if InvoiceType is CreditNote.
	CreditNoteDetails *CreditNoteDetails `json:"creditNoteDetails,omitempty"`

	// HSN Tax code. The HSN number cannot contain alphabets.
	HsnCode *string `json:"hsnCode,omitempty"`

	// Details of quantity.
	InvoicedQuantity ItemQuantity `json:"invoicedQuantity"`

	// Unique number related to this line item.
	ItemSequenceNumber int `json:"itemSequenceNumber"`

	// An amount of money, including units in the form of currency.
	NetCost Money `json:"netCost"`

	// The Amazon purchase order number for this invoiced line item. Formatting Notes: 8-character alpha-numeric code. This value is mandatory only when invoiceType is Invoice, and is not required when invoiceType is CreditNote.
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`

	// Individual tax details per line item.
	TaxDetails *[]TaxDetails `json:"taxDetails,omitempty"`

	// The vendor selected product identifier of the item. Should be the same as was provided in the purchase order.
	VendorProductIdentifier *string `json:"vendorProductIdentifier,omitempty"`
}

// ItemQuantity defines model for ItemQuantity.
type ItemQuantity struct {

	// Quantity of an item. This value should not be zero.
	Amount int `json:"amount"`

	// Unit of measure for the quantity.
	UnitOfMeasure string `json:"unitOfMeasure"`

	// The case size, if the unit of measure value is Cases.
	UnitSize *int `json:"unitSize,omitempty"`
}

// Money defines model for Money.
type Money struct {

	// A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`.
	Amount *Decimal `json:"amount,omitempty"`

	// Three-digit currency code in ISO 4217 format.
	CurrencyCode *string `json:"currencyCode,omitempty"`
}

// PartyIdentification defines model for PartyIdentification.
type PartyIdentification struct {

	// A physical address.
	Address *Address `json:"address,omitempty"`

	// Assigned identification for the party.
	PartyId string `json:"partyId"`

	// Tax registration details of the party.
	TaxRegistrationDetails *[]TaxRegistrationDetails `json:"taxRegistrationDetails,omitempty"`
}

// PaymentTerms defines model for PaymentTerms.
type PaymentTerms struct {

	// The number of calendar days from the Base date (Invoice date) until the discount is no longer valid.
	DiscountDueDays *float32 `json:"discountDueDays,omitempty"`

	// A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`.
	DiscountPercent *Decimal `json:"discountPercent,omitempty"`

	// The number of calendar days from the base date (invoice date) until the total amount on the invoice is due.
	NetDueDays *float32 `json:"netDueDays,omitempty"`

	// The payment term type for the invoice.
	Type *string `json:"type,omitempty"`
}

// SubmitInvoicesRequest defines model for SubmitInvoicesRequest.
type SubmitInvoicesRequest struct {
	Invoices *[]Invoice `json:"invoices,omitempty"`
}

// SubmitInvoicesResponse defines model for SubmitInvoicesResponse.
type SubmitInvoicesResponse struct {

	// A list of error responses returned when a request is unsuccessful.
	Errors  *ErrorList     `json:"errors,omitempty"`
	Payload *TransactionId `json:"payload,omitempty"`
}

// TaxDetails defines model for TaxDetails.
type TaxDetails struct {

	// An amount of money, including units in the form of currency.
	TaxAmount Money `json:"taxAmount"`

	// A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`.
	TaxRate *Decimal `json:"taxRate,omitempty"`

	// Type of the tax applied.
	TaxType string `json:"taxType"`

	// An amount of money, including units in the form of currency.
	TaxableAmount *Money `json:"taxableAmount,omitempty"`
}

// TaxRegistrationDetails defines model for TaxRegistrationDetails.
type TaxRegistrationDetails struct {

	// The tax registration number for the entity. For example, VAT ID.
	TaxRegistrationNumber string `json:"taxRegistrationNumber"`

	// The tax registration type for the entity.
	TaxRegistrationType string `json:"taxRegistrationType"`
}

// TransactionId defines model for TransactionId.
type TransactionId struct {

	// GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction.
	TransactionId *string `json:"transactionId,omitempty"`
}

// SubmitInvoicesJSONBody defines parameters for SubmitInvoices.
type SubmitInvoicesJSONBody SubmitInvoicesRequest

// SubmitInvoicesRequestBody defines body for SubmitInvoices for application/json ContentType.
type SubmitInvoicesJSONRequestBody SubmitInvoicesJSONBody
